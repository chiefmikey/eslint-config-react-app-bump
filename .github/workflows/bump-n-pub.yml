name: Bump-N-Pub

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
  workflow_dispatch: {}

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.bump.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Configure
        run: |
          apt-get update && apt-get install -y gnupg
          git config --global user.name "Mikl Wolfe"
          git config --global user.email "wolfemikl@gmail.com"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_KEY_ID }}
          passphrase: ${{ secrets.GPG_PASS }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Bump Version
        id: bump
        env:
          GITHUB_TOKEN: ${{ secrets.UPDATE_PACKAGE }}
        run: |
          VERSION=$(npm version patch -m "v%s")
          git commit -S --amend --no-edit
          git push origin main --tags
          echo "TAG=${VERSION}" >> $GITHUB_OUTPUT

  publish-npm:
    name: Publish npm
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.result == 'success'
    env:
      TAG: ${{ needs.version.outputs.TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG }}

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish
        run: npm publish --access public
        env:
           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-release:
    name: Release
    runs-on: ubuntu-latest
    needs: [version, publish-npm]
    if: needs.publish-npm.result == 'success'
    env:
      TAG: ${{ needs.version.outputs.TAG }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Release Tag
        env:
          GITHUB_TOKEN: ${{ secrets.UPDATE_PACKAGE }}
        run: |
          gh release create ${{ env.TAG }} --verify-tag --generate-notes --latest
