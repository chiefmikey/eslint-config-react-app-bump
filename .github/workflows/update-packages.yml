name: Update Packages

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-packages:
    name: Update Packages
    runs-on: ubuntu-latest

    steps:
      - name: Set Up
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run
        env:
          GITHUB_TOKEN: ${{ secrets.UPDATE_PACKAGE }}
        run: |
          git config --global user.name "Mikl Wolfe"
          git config --global user.email "wolfemikl@gmail.com"
          npm i

          STATUS=0
          UPDATES=()
          PACKAGES=$(jq -r '.dependencies | to_entries[] | "\(.key)@\(.value)"' package.json)
          for package in ${PACKAGES}; do
            packageName="${package%@*}"
            v1="${package##*@}"
            v1="${v1##*^}"
            v2="$(npm view "${packageName}" version)"

            if [ "${v1}" != "${v2}" ]; then
              npm i -s --no-package-lock "${packageName}"
              LABEL="${packageName} (${v1} -> ${v2})"
              echo "${LABEL}"
              echo "${LABEL}" >> $GITHUB_STEP_SUMMARY
              UPDATES+=("${LABEL}")
              STATUS+=1
            fi
          done

          if [ ${STATUS} -eq 0 ]; then
            echo "Packages are up to date" >> $GITHUB_STEP_SUMMARY
          else
            DATE=$(date +%Y-%m-%d)
            MESSAGE="chore(deps#${{ github.run_number }}): bump (${STATUS})"
            BODY=$(printf "%s\n" "${UPDATES}")
            git checkout -b "${DATE}"
            git add package.json
            git commit -am "${MESSAGE}"
            git push -f origin "${DATE}"
            gh pr create -l dependencies -t "${MESSAGE}" -b "${BODY}"
          fi
